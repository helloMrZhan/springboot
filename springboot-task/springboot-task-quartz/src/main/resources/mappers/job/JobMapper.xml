<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.quartz.mapper.JobMapper">

    <resultMap type="com.example.quartz.model.entity.JobEntity" id="BaseResultMap">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="cycle" column="cycle" jdbcType="VARCHAR"/>
        <result property="invokeTarget" column="invoke_target" jdbcType="VARCHAR"/>
        <result property="cronExpression" column="cron_expression" jdbcType="VARCHAR"/>
        <result property="policy" column="policy" jdbcType="INTEGER"/>
        <result property="situation" column="situation" jdbcType="INTEGER"/>
        <result property="version" column="version" jdbcType="INTEGER"/>
        <result property="lastRunTime" column="last_run_time" jdbcType="TIMESTAMP"/>
        <result property="nextRunTime" column="next_run_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,cycle,invoke_target,cron_expression,policy,situation,version,last_run_time,next_run_time,status,del_flag,create_by,create_time,update_by,update_time,remark
    </sql>

    <select id="jobList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_job
        <where>
            del_flag = 0
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>

    <select id="selectById" parameterType="string" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_job where id =#{id}
    </select>


    <insert id="insert" parameterType="com.example.quartz.model.entity.JobEntity">
        insert into sys_job(id, name, cycle, invoke_target, cron_expression, situation, version, policy, last_run_time,
                             next_run_time, status, del_flag,
                             create_by, create_time, update_by, update_time, remark)
        values (#{id}, #{name}, #{cycle}, #{invokeTarget}, #{cronExpression}, #{situation}, #{version}, #{policy},
                #{lastRunTime}, #{nextRunTime}, #{status}, #{delFlag},
                #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{remark})
    </insert>

    <update id="updateVersion">
        update sys_job
        <set>
            version = #{version} + 1,
            <if test="job.lastRunTime != null">
                last_run_time = #{job.lastRunTime},
            </if>
            <if test="job.nextRunTime != null">
                next_run_time = #{job.nextRunTime},
            </if>
            <if test="job.situation != null">
                situation = #{job.situation},
            </if>
        </set>
        where id = #{job.id} and version = #{version}
    </update>

    <update id="update" parameterType="com.example.quartz.model.entity.JobEntity">
        update sys_job
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="situation != null">
                situation = #{situation},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="invokeTarget != null">
                invoke_target = #{invokeTarget},
            </if>
            <if test="cronExpression != null">
                cron_expression = #{cronExpression},
            </if>
            <if test="cycle != null">
                cycle = #{cycle},
            </if>
            <if test="policy != null">
                policy = #{policy},
            </if>
            <if test="version != null">
                version = #{version} + 1,
            </if>
            <if test="lastRunTime != null">
                last_run_time = #{lastRunTime},
            </if>
            <if test="nextRunTime != null">
                next_run_time = #{nextRunTime},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <delete id="delete" parameterType="string">
        delete
        from sys_job
        where id = #{id}
    </delete>

    <insert id="insertTaskLog" parameterType="com.example.quartz.model.entity.JobLog">
        insert into sys_job_log
            value (#{id}, #{taskId}, #{time}, #{status}, #{exceptionInfo}, #{createTime})
    </insert>

    <update id="updateSituationStatus">
        update sys_job
        set situation = #{situation}
        where id IN
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>
</mapper>